/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.gs.test.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.MVCCModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.StagedAuditedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Dummy service. Represents a row in the &quot;TEST_Dummy&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.gs.test.model.impl.DummyModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.gs.test.model.impl.DummyImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Dummy
 * @see com.liferay.gs.test.model.impl.DummyImpl
 * @see com.liferay.gs.test.model.impl.DummyModelImpl
 * @generated
 */
@ProviderType
public interface DummyModel extends BaseModel<Dummy>, GroupedModel, MVCCModel,
	ShardedModel, StagedAuditedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a dummy model instance should use the {@link Dummy} interface instead.
	 */

	/**
	 * Returns the primary key of this dummy.
	 *
	 * @return the primary key of this dummy
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this dummy.
	 *
	 * @param primaryKey the primary key of this dummy
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the mvcc version of this dummy.
	 *
	 * @return the mvcc version of this dummy
	 */
	@Override
	public long getMvccVersion();

	/**
	 * Sets the mvcc version of this dummy.
	 *
	 * @param mvccVersion the mvcc version of this dummy
	 */
	@Override
	public void setMvccVersion(long mvccVersion);

	/**
	 * Returns the uuid of this dummy.
	 *
	 * @return the uuid of this dummy
	 */
	@AutoEscape
	@Override
	public String getUuid();

	/**
	 * Sets the uuid of this dummy.
	 *
	 * @param uuid the uuid of this dummy
	 */
	@Override
	public void setUuid(String uuid);

	/**
	 * Returns the dummy ID of this dummy.
	 *
	 * @return the dummy ID of this dummy
	 */
	public long getDummyId();

	/**
	 * Sets the dummy ID of this dummy.
	 *
	 * @param dummyId the dummy ID of this dummy
	 */
	public void setDummyId(long dummyId);

	/**
	 * Returns the group ID of this dummy.
	 *
	 * @return the group ID of this dummy
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this dummy.
	 *
	 * @param groupId the group ID of this dummy
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this dummy.
	 *
	 * @return the company ID of this dummy
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this dummy.
	 *
	 * @param companyId the company ID of this dummy
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this dummy.
	 *
	 * @return the user ID of this dummy
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this dummy.
	 *
	 * @param userId the user ID of this dummy
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this dummy.
	 *
	 * @return the user uuid of this dummy
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this dummy.
	 *
	 * @param userUuid the user uuid of this dummy
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this dummy.
	 *
	 * @return the user name of this dummy
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this dummy.
	 *
	 * @param userName the user name of this dummy
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this dummy.
	 *
	 * @return the create date of this dummy
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this dummy.
	 *
	 * @param createDate the create date of this dummy
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this dummy.
	 *
	 * @return the modified date of this dummy
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this dummy.
	 *
	 * @param modifiedDate the modified date of this dummy
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the field1 of this dummy.
	 *
	 * @return the field1 of this dummy
	 */
	@AutoEscape
	public String getField1();

	/**
	 * Sets the field1 of this dummy.
	 *
	 * @param field1 the field1 of this dummy
	 */
	public void setField1(String field1);

	/**
	 * Returns the field2 of this dummy.
	 *
	 * @return the field2 of this dummy
	 */
	public boolean getField2();

	/**
	 * Returns <code>true</code> if this dummy is field2.
	 *
	 * @return <code>true</code> if this dummy is field2; <code>false</code> otherwise
	 */
	public boolean isField2();

	/**
	 * Sets whether this dummy is field2.
	 *
	 * @param field2 the field2 of this dummy
	 */
	public void setField2(boolean field2);

	/**
	 * Returns the field3 of this dummy.
	 *
	 * @return the field3 of this dummy
	 */
	public int getField3();

	/**
	 * Sets the field3 of this dummy.
	 *
	 * @param field3 the field3 of this dummy
	 */
	public void setField3(int field3);

	/**
	 * Returns the field4 of this dummy.
	 *
	 * @return the field4 of this dummy
	 */
	public Date getField4();

	/**
	 * Sets the field4 of this dummy.
	 *
	 * @param field4 the field4 of this dummy
	 */
	public void setField4(Date field4);

	/**
	 * Returns the field5 of this dummy.
	 *
	 * @return the field5 of this dummy
	 */
	@AutoEscape
	public String getField5();

	/**
	 * Sets the field5 of this dummy.
	 *
	 * @param field5 the field5 of this dummy
	 */
	public void setField5(String field5);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Dummy dummy);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Dummy> toCacheModel();

	@Override
	public Dummy toEscapedModel();

	@Override
	public Dummy toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}